{
  "version": 3,
  "sources": ["../../wordfilter/lib/badwords.json", "../../wordfilter/lib/wordfilter.js"],
  "sourcesContent": ["[\r\n    \"beeyotch\",\r\n    \"biatch\",\r\n    \"bitch\",\r\n    \"chinaman\",\r\n    \"chinamen\",\r\n    \"chink\",\r\n    \"crip\",\r\n    \"cunt\",\r\n    \"dago\",\r\n    \"daygo\",\r\n    \"dego\",\r\n    \"dick\",\r\n    \"douchebag\",\r\n    \"dyke\",\r\n    \"fag\",\r\n    \"fatass\",\r\n    \"fatso\",\r\n    \"gash\",\r\n    \"gimp\",\r\n    \"golliwog\",\r\n    \"gook\",\r\n    \"gyp\",\r\n    \"homo\",\r\n    \"hooker\",\r\n    \"jap\",\r\n    \"kike\",\r\n    \"kraut\",\r\n    \"lame\",\r\n    \"lardass\",\r\n    \"lesbo\",\r\n    \"negro\",\r\n    \"nigga\",\r\n    \"nigger\",\r\n    \"paki\",\r\n    \"pickaninny\",\r\n    \"pussy\",\r\n    \"raghead\",\r\n    \"retard\",\r\n    \"shemale\",\r\n    \"skank\",\r\n    \"slut\",\r\n    \"spade\",\r\n    \"spic\",\r\n    \"spook\",\r\n    \"tard\",\r\n    \"tits\",\r\n    \"titt\",\r\n    \"trannies\",\r\n    \"tranny\",\r\n    \"twat\",\r\n    \"wetback\",\r\n    \"whore\",\r\n    \"wop\"\r\n]\r\n", "/*\r\n * wordfilter\r\n * https://github.com/dariusk/wordfilter\r\n *\r\n * Copyright (c) 2013 Darius Kazemi\r\n * Licensed under the MIT license.\r\n */\r\n\r\n'use strict';\r\n\r\nvar blacklist, regex;\r\n\r\nfunction rebuild() {\r\n  regex = new RegExp(blacklist.join('|'), 'i');\r\n}\r\n\r\nblacklist = require('./badwords.json');\r\nrebuild();\r\n\r\nmodule.exports = {\r\n  blacklisted: function(string) {\r\n    return !!blacklist.length && regex.test(string);\r\n  },\r\n  addWords: function(array) {\r\n    blacklist = blacklist.concat(array);\r\n    rebuild();\r\n  },\r\n  removeWord: function(word) {\r\n    var index = blacklist.indexOf(word);\r\n    if (index > -1) {\r\n      blacklist.splice(index, 1);\r\n      rebuild();\r\n    }\r\n  },\r\n  clearList: function() {\r\n    blacklist = [];\r\n    rebuild();\r\n  },\r\n};\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAA;AAAA,MACI;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA;AAAA;;;ACtDA;AAAA;AAUA,QAAI;AAAJ,QAAe;AAEf,aAAS,UAAU;AACjB,cAAQ,IAAI,OAAO,UAAU,KAAK,GAAG,GAAG,GAAG;AAAA,IAC7C;AAEA,gBAAY;AACZ,YAAQ;AAER,WAAO,UAAU;AAAA,MACf,aAAa,SAAS,QAAQ;AAC5B,eAAO,CAAC,CAAC,UAAU,UAAU,MAAM,KAAK,MAAM;AAAA,MAChD;AAAA,MACA,UAAU,SAAS,OAAO;AACxB,oBAAY,UAAU,OAAO,KAAK;AAClC,gBAAQ;AAAA,MACV;AAAA,MACA,YAAY,SAAS,MAAM;AACzB,YAAI,QAAQ,UAAU,QAAQ,IAAI;AAClC,YAAI,QAAQ,IAAI;AACd,oBAAU,OAAO,OAAO,CAAC;AACzB,kBAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA,WAAW,WAAW;AACpB,oBAAY,CAAC;AACb,gBAAQ;AAAA,MACV;AAAA,IACF;AAAA;AAAA;",
  "names": []
}
